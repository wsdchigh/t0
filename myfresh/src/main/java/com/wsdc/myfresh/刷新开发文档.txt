                关于刷新的开发文档

<li>    定义
        <li>    刷新包括下拉和上拉两个操作
        <li>    由于content无法响应滑动。那么container用这些事件执行一个滑动

<li>    参数定义
        <li>    是否支持上拉操作
        <li>    如果支持上拉操作，那么上拉加载中，如果系统回调完成，此时应该怎么做
                <li>    直接刷新布局，此时会触发一个回弹效果
                <li>    直接刷新布局，不触发回弹效果
                        这里要求保证，没有任何偏移，上拉框和content底部重叠，content重叠部分不做任何用途
        <li>    content是否能够处理滑动事件
                <li>    滑动顶了，不能再往下拉了
                <li>    滑动低了，不能再网上拉了
                <li>    如果事件区域处于content中的一个子滑动View上
                        <li>    此时需要优先处理子滑动View上面的事件
                                如果不这样做，那么子滑动View将无法处理事件(将无法滑动)

        <li>    是否定义子Header(Tail)
                <li>    我们支持多个ICue，但是container对应方式只支持一个ICue，其他的均可以通过监听的方式回调数据
                        <li>    ICue并不是子View，但是可以注册监听，实现对应的效果

        <li>    滑动的过程中，是否需要将事件下发

        <li>    是否支持横向滑动，纵向滑动，或者两者均支持   (通常是纵向滑动)
        <li>    滑动阻碍系数

        <li>    下拉刷新，是否支持二级刷新
        <li>    如果支持二级刷新，那么回弹的时间定义在哪里 (滑动期间只要达到要求?松手的时候达到要求)

        <li>    二次事件，如果松手之后，处于刷新状态，此时是否需要响应手指?或者禁止滑动，直接将事件下发到content中
                <li>    默认的行为是，支持二级事件

<li>    布局方面
        <li>    实现并没有绘制header和tail，只有在有需要的时候才去绘制

        <li>    下拉刷新，会回弹的初始位置
                <li>    理论上，下拉的高度无限
        <li>    上拉刷新，只要触发了，就滑动到一个指定的偏移高度
                <li>    上拉不会随着手指滑动造成偏移变大(可以变小)
                <li>    刷新完成之后，不要回弹，而是content增加一定的高度
                        <li>    此时 content ++
                        <li>    此时 content 的偏移并没有回弹，需要在后续的滑动中
                                有效考虑撤回偏移  当出现偏移抵消完毕的情况之下
                                取消之前的 高度 增益  ，因为此时之前的高度增益处于不可见
                                取消是没有问题的

<li>    滑动优先级
        <li>    如果滑动的方向，存在着偏移，优先抵消偏移
        <li>    再行考虑content是否需要去滑动


<li>    上拉加载的限制意义
        <li>    通常优先加载两屏的，如果数据到了最后一屏，
                此时不要等滑动到顶部才刷新，而是立刻去加载下一屏
                实现无缝加载

        <li>    上拉刷新的场景不是很大


<li>    事件的处理   (针对滑动事件)
        <li>    如果没有滑动  down，up事件一律下发
        <li>    如果对应方向 存在着偏移 优先处理偏移
                <li>    发送cancel事件
                <li>    关于偏移的处理
                        <li>    因为上拉刷新允许一定的偏移
                        <li>    先询问content是否需要响应时间
                                <li>    比如上拉有偏移了，但是数据刷新 content是支持上拉这个操作的
                <li>    如果因为反向操作，导致偏移 == 0 需要作出对应的操作
                        <li>    发送down事件，此时正是交接给content来 处理


